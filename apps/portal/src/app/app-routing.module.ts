import { Attribute, ChangeDetectorRef, ComponentFactoryResolver, Directive, NgModule, ViewContainerRef } from '@angular/core';
import { ActivatedRoute, ChildrenOutletContexts, RouterModule, RouterOutlet } from '@angular/router';
import { HomeComponent } from './home/home.component';
import { CartComponent } from './cart/cart.component';
import { PageNotFoundComponent } from './page-not-found/page-not-found.component';
import { CheckoutComponent } from './checkout/checkout.component';
import { ProductsListComponent } from './products/products-list/products-list.component';
import { ProductDetailComponent } from './products/product-detail/product-detail.component';
import { CompleteComponent } from './checkout/complete/complete.component';
import { OrdersPaymentInfoComponent } from './static/orders-payment-info/orders-payment-info.component';
import { AboutTribesBrandComponent } from './static/about-tribes-brand/about-tribes-brand.component';
import { ContactsComponent } from './static/contacts/contacts.component';
import { PolicyComponent } from './static/policy/policy.component';
import { AboutCompanyComponent } from './static/about-company/about-company.component';
import { ReturnsAndRefundsComponent } from './static/returns-and-refunds/returns-and-refunds.component';
import { SizessComponent } from './static/sizes/sizes.component'
import { SupportComponent } from './static/support/support.component';
import { BrandDefaultMeta, BrandDescription, BrandImageDescription, BrandTitle, SEORoute } from './shared/seoservice.service';
import { SocialLuckydayComponent } from './social/luckyday/luckyday.component';
import { CartGuardService } from './cart/shared/cart.guard';
import { RedirectComponent } from './redirect/redirect.component';
import { ScanToRegisterComponent } from './products/register/register.component';
import { CatalogComponent } from './products/catalog/catalog.component';

@Directive({ selector: 'router-outlet' })
export class MyRouterOutlet extends RouterOutlet {
  constructor(
    parentContexts: ChildrenOutletContexts,
    location: ViewContainerRef,
    resolver: ComponentFactoryResolver,
    @Attribute('name') name: string,
    private ref: ChangeDetectorRef
  ) {
    super(parentContexts, location, resolver, name, ref);
  }

  override activateWith(
    activatedRoute: ActivatedRoute,
    resolver: ComponentFactoryResolver
  ): void {
    super.activateWith(activatedRoute, resolver);
    this.ref.detectChanges();
  }
}

@NgModule({
  declarations: [MyRouterOutlet],
  exports: [MyRouterOutlet],
})
export class MyRouterOutletModule {}

export const PortalRoutes: SEORoute[] = [
  // { path: '', redirectTo: '/home', pathMatch: 'full' },
  new SEORoute({ path: '', pathMatch: 'full', component: HomeComponent, data: {
    ...BrandDefaultMeta
  }}),
  new SEORoute({ path: 'ig', pathMatch: 'full', component: HomeComponent, data: {
    ...BrandDefaultMeta
  }}),
  new SEORoute({ path: 'brand', pathMatch: 'full', redirectTo: 'about-tribes-brand', data: {
    ...BrandDefaultMeta
  }}),
  new SEORoute({ path: 'care', pathMatch: 'full', redirectTo: 'about-tribes-brand', data: {
    ...BrandDefaultMeta
  }}),
  new SEORoute({ path: 'v', pathMatch: 'full', redirectTo: 'about-tribes-brand', data: {
    ...BrandDefaultMeta
  }}),
  new SEORoute({ path: 'luckyday', pathMatch: 'full', component: SocialLuckydayComponent, data: {
    ...BrandDefaultMeta
  }}),
  new SEORoute({ path: 'P/:size/:id', pathMatch: 'prefix', component: ScanToRegisterComponent, data: {
    ...BrandDefaultMeta
  } }),
  new SEORoute({ path: 'product/:id', component: ProductDetailComponent, pathMatch: 'prefix', data: {
    ...BrandDefaultMeta
  }}),
  new SEORoute({ path: 'rd/:id', component: RedirectComponent, pathMatch: 'prefix', data: {
    ...BrandDefaultMeta
  }}),
  new SEORoute({ path: 'orders-payment-info', component: OrdersPaymentInfoComponent, pathMatch: 'full', data: {
    ...BrandDefaultMeta,
    title:"–£—Å–ª–æ–≤–∏—è –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è | üõç TRIBES ¬Æ - –î–ª—è —è—Ä–∫–∏—Ö –∏ —Å–º–µ–ª—ã—Ö",
    description: "–£—Å–ª–æ–≤–∏—è –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –∑–∞–∫–∞–∑–∞, –æ–ø–ª–∞—Ç—ã, –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ üõçTRIBES¬Æ"
  }}),
  new SEORoute({ path: 'returns-and-refunds', component: ReturnsAndRefundsComponent, pathMatch: 'full', data: {
    ...BrandDefaultMeta,
    title:"–í–æ–∑–≤—Ä–∞—Ç—ã —Ç–æ–≤–∞—Ä–∞ –∏ –¥–µ–Ω–µ–≥ | üõç TRIBES ¬Æ - –î–ª—è —è—Ä–∫–∏—Ö –∏ —Å–º–µ–ª—ã—Ö",
    description: "–£—Å–ª–æ–≤–∏—è –∏ –ø—Ä–∞–≤–∏–ª–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ –¥–µ–Ω–µ–≥"
  }}),
  new SEORoute({ path: 'sizes', component: SizessComponent, pathMatch: 'full', data: {
    ...BrandDefaultMeta,
    title: "–†–∞–∑–º–µ—Ä–Ω–∞—è —Å–µ—Ç–∫–∞ - Sizes table | üõç TRIBES ¬Æ - –ë–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    description: "–î–∞–Ω–Ω—ã–µ –æ –≤—Å–µ—Ö —Ä–∞–∑–º–µ—Ä–∞—Ö –æ–¥–µ–∂–¥—ã –±—Ä–µ–Ω–¥–∞ üõç TRIBES ¬Æ –∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ–∏—Ç –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ."
  }}),
  new SEORoute({ path: 'about-tribes-brand', component: AboutTribesBrandComponent, pathMatch: 'full', data: {
    ...BrandDefaultMeta,
    title: "üíé –ú–∏—Å—Å–∏–∏—è –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –±—Ä–µ–Ω–¥–∞ " + BrandTitle,
    description: BrandDescription
  }}),
  new SEORoute({path: 'support', component: SupportComponent, pathMatch: 'full', data: {
    ...BrandDefaultMeta,
    title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ | üõç TRIBES ¬Æ - –ë–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    description: "–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –∑–∞–∫–∞–∑–æ–≤, –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø—Ä–æ—á–∏–º ",
  }}),
  new SEORoute({ path: 'contacts', component: ContactsComponent, pathMatch: 'full', data: {
    ...BrandDefaultMeta,
    title:"–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ | üõç TRIBES ¬Æ - –ë–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    description: "ü§ù–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ –ø–æ–≤–æ–¥—É —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –∏–ª–∏ –ø–æ –¥—Ä—É–≥–∏–º –≤–æ–ø—Ä–æ—Å–∞–º | üõçTRIBES¬Æ"
  }}),
  new SEORoute({ path: 'policy', component: PolicyComponent, pathMatch: 'full', data: {
    ...BrandDefaultMeta,
    title:"–ü–æ–ª–∏—Ç–∏–∫–∏ | üõç TRIBES ¬Æ - –ë–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    description: "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –°–æ–≥–ª–∞—Å–∏–µ —Å –ü–î–ù –û–û–û –¢—Ä–∞–π–±—Å –∏ –ë—Ä–µ–Ω–¥ TRIBES"
  }}),
  new SEORoute({ path: 'about-company', component: AboutCompanyComponent, pathMatch: 'full', data: {
    ...BrandDefaultMeta,
    title:"–û –∫–æ–º–ø–∞–Ω–∏–∏ | üõç TRIBES ¬Æ - –ë–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    description: "–†–µ–∫–≤–∏–∑–∏—Ç—ã –û–û–û –¢—Ä–∞–π–±—Å –∏ –ë—Ä–µ–Ω–¥ üõçTRIBES¬Æ - —Å—Ç–∏–ª—å –±–æ–ª—å—à–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –ø—Ä–∏—è—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∑–∞–±–æ—Ç–∞ –æ –∫–æ–º—Ñ–æ—Ä—Ç–µ",
  }}),
  new SEORoute({ path: 'cart', component: CartComponent, pathMatch: 'full', data: {
    ...BrandDefaultMeta,
    title:"–ö–æ—Ä–∑–∏–Ω–∞ | üõç TRIBES ¬Æ - –ë–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    description: "–í–∞—à–∏ –∑–∞–∫–∞–∑—ã –æ–¥–µ–∂–¥—ã üõçTRIBES¬Æ - —Å—Ç–∏–ª—å –±–æ–ª—å—à–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –ø—Ä–∏—è—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∑–∞–±–æ—Ç–∞ –æ –∫–æ–º—Ñ–æ—Ä—Ç–µ"
  }}),
  new SEORoute({ path: 'checkout', 
    component: CheckoutComponent, 
    canActivate: [CartGuardService],
    pathMatch: 'prefix', 
    data: {
    ...BrandDefaultMeta,
    title:"–ó–∞–∫–∞–∑ | üõç TRIBES ¬Æ - –ë–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    description: "–í–∞—à –∑–∞–∫–∞–∑ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω–µ TRIBES - —Å—Ç–∏–ª—å –±–æ–ª—å—à–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –ø—Ä–∏—è—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∑–∞–±–æ—Ç–∞ –æ –∫–æ–º—Ñ–æ—Ä—Ç–µ"
  }}),
  new SEORoute({ path: 'order-complete', component: CompleteComponent, pathMatch: 'prefix', data: {
    ...BrandDefaultMeta,
    title: "–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ | üõç TRIBES ¬Æ - –ë–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    description: "–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω–µ TRIBES - —Å—Ç–∏–ª—å –±–æ–ª—å—à–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –ø—Ä–∏—è—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∑–∞–±–æ—Ç–∞ –æ –∫–æ–º—Ñ–æ—Ä—Ç–µ",
  }}),
  ///Dynamics
  new SEORoute({ path: 'catalog', component: CatalogComponent, pathMatch: 'full', data: {
    ...BrandDefaultMeta,
    title: "üõç–ö–∞—Ç–∞–ª–æ–≥ –∏ –Ω–æ–≤–∏–Ω–∫–∏ TRIBES¬Æ - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –†–æ—Å—Å–∏—è üá∑üá∫",
    description: BrandImageDescription,
  }}),
  new SEORoute({ path: 'catalog/:category', component: ProductsListComponent, pathMatch: 'prefix',data: {
    ...BrandDefaultMeta,
    title: "üõç–ö–∞—Ç–∞–ª–æ–≥ –∏ –Ω–æ–≤–∏–Ω–∫–∏ TRIBES¬Æ - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –†–æ—Å—Å–∏—è üá∑üá∫",
    description: BrandImageDescription,
  }}),
  new SEORoute({ path: ':gender/catalog', component: ProductsListComponent, pathMatch: 'prefix', data: {
    ...BrandDefaultMeta,
    title: "üõç–ö–∞—Ç–∞–ª–æ–≥ –∏ –Ω–æ–≤–∏–Ω–∫–∏ TRIBES¬Æ - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –†–æ—Å—Å–∏—è üá∑üá∫",
    description: BrandImageDescription,
  }}),
  new SEORoute({ path: ':gender/catalog/:category', component: ProductsListComponent, pathMatch: 'prefix', data: {
    ...BrandDefaultMeta,
    title: "üõç–ö–∞—Ç–∞–ª–æ–≥ –∏ –Ω–æ–≤–∏–Ω–∫–∏ TRIBES¬Æ - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –†–æ—Å—Å–∏—è üá∑üá∫",
    description: BrandImageDescription,
  }}),
  new SEORoute({ path: ':gender/catalog/:category/:color', component: ProductsListComponent, pathMatch: 'prefix', data: {
    ...BrandDefaultMeta,
    title: "üõç–ö–∞—Ç–∞–ª–æ–≥ –∏ –Ω–æ–≤–∏–Ω–∫–∏ TRIBES¬Æ - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –†–æ—Å—Å–∏—è üá∑üá∫",
    description: BrandImageDescription,
  }}),
  new SEORoute({ path: ':gender/catalog/:category/:color/:size', component: ProductsListComponent, pathMatch: 'prefix', data: {
    ...BrandDefaultMeta,
    title: "üõç–ö–∞—Ç–∞–ª–æ–≥ –∏ –Ω–æ–≤–∏–Ω–∫–∏ TRIBES¬Æ - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –†–æ—Å—Å–∏—è üá∑üá∫",
    description: BrandImageDescription,
  }}),
  new SEORoute({path: '404', component: PageNotFoundComponent, pathMatch: 'prefix', data: {
    ...BrandDefaultMeta,
    title:"–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ | üõç TRIBES ¬Æ - –ë–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    description: "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ | TRIBES - —Å—Ç–∏–ª—å –±–æ–ª—å—à–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –ø—Ä–∏—è—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∑–∞–±–æ—Ç–∞ –æ –∫–æ–º—Ñ–æ—Ä—Ç–µ",
  }}),
  // ALL OTHER 404
  new SEORoute({path: '**', component: PageNotFoundComponent, pathMatch: 'prefix', data: {
    ...BrandDefaultMeta,
    title:"–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ | üõç TRIBES ¬Æ - –ë–æ–ª—å—à–µ —Å–≤–æ–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
    description: "–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ | TRIBES - —Å—Ç–∏–ª—å –±–æ–ª—å—à–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –ø—Ä–∏—è—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∑–∞–±–æ—Ç–∞ –æ –∫–æ–º—Ñ–æ—Ä—Ç–µ",
  }}),
];

@NgModule({
  imports: [RouterModule.forRoot(PortalRoutes, {
    scrollPositionRestoration: 'enabled',
    anchorScrolling: 'enabled',
    relativeLinkResolution: 'corrected',
    canceledNavigationResolution: 'computed'
})],
  exports: [RouterModule, MyRouterOutletModule],
  providers: [
    // AdminGuard,
    CartGuardService
  ]
})
export class AppRoutingModule { }
